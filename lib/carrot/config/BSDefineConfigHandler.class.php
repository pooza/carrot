<?php
/**
 * @package jp.co.b-shock.carrot
 * @subpackage config
 */

/**
 * DefineConfigHandlerのラッパー
 *
 * @author 小石達也 <tkoishi@b-shock.co.jp>
 * @copyright (c)b-shock. co., ltd.
 * @version $Id$
 */
class BSDefineConfigHandler extends DefineConfigHandler {
	public function & execute ($config) {
		$body = array(
			'<?php',
			'// auth-generated by ' . get_class($this),
			'// date: ' . BSDate::getNow('Y/m/d H:i:s'),
			'$constants = array(',
		);

		$prefix = preg_replace('/_$/', '', $this->getParameter('prefix'));
		foreach ($this->parseIni($config) as $category => $values) {
			foreach ($values as $key => $value) {
				if (preg_match('/^\\./', $category)) {
					$key = array($prefix, $key);
				} else {
					$key = array($prefix, $category, $key);
				}
				$key = strtoupper(implode('_', $key));
				$value = $this->replaceConstants($value);
				$body[] = sprintf(' %s => %s,', self::literalize($key), self::literalize($value));
			}
		}

		$body[] = ');';
		$body[] = 'foreach ($constants as $key => $value) {';
		$body[] = ' if (!defined($key)) define($key, $value);';
		$body[] = '}';
		$body[] = '?>';
		$body = implode("\n", $body);
		return $body;
	}

	public static function & replaceConstants ($value) {
		return BSDirectoryFinder::replaceConstants($value);
	}
}

/* vim:set tabstop=4 ai: */
?>